{"version":3,"sources":["styles/index.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","state","amount","handleInputChange","e","setState","target","value","handleFormInput","preventDefault","handleDepositButton","props","onDeposit","Number","handleWithdrawButton","onWithdraw","this","className","styles","section","onSubmit","type","name","input","onChange","button","onClick","Component","Balance","balance","income","expenses","span","TransactionHistory","transactions","history","headline","map","transaction","id","date","key","Dashboard","handleDeposit","Swal","fire","newStateTransaction","uuidv1","Date","toLocaleString","handleWithdraw","localStorage","getItem","parsedTransactions","JSON","parse","calculateFunds","error","prevProps","prevState","lengt","length","setItem","stringify","reduce","acc","deposit","withdrawal","totalTransfers","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4be0a8d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__3BhaY\",\"input\":\"styles_input__2Kive\",\"section\":\"styles_section__3HaWR\",\"balance\":\"styles_balance__17dQB\",\"history\":\"styles_history__3qeO5\",\"span\":\"styles_span__clfy0\",\"headline\":\"styles_headline__19mW8\"};","/* eslint-disable */\nimport React, { Component } from 'react';\nimport T from 'prop-types';\nimport styles from '../../styles/index.module.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onDeposit: T.func.isRequired,\n    onWithdraw: T.func.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      amount: e.target.value,\n    });\n  };\n\n  handleFormInput = e => {\n    e.preventDefault();\n  };\n\n  handleDepositButton = () => {\n    this.props.onDeposit(Number(this.state.amount));\n    this.setState({ amount: '' });\n  };\n\n  handleWithdrawButton = () => {\n    this.props.onWithdraw(Number(this.state.amount));\n    this.setState({ amount: '' });\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={styles.section}>\n        <form onSubmit={this.handleFormInput}>\n          <input\n            type=\"number\"\n            name=\"amount\"\n            className={styles.input}\n            value={amount}\n            onChange={this.handleInputChange}\n          ></input>\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={this.handleDepositButton}\n          >\n            Deposit\n          </button>\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={this.handleWithdrawButton}\n          >\n            Withdraw\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n","/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport T from 'prop-types';\nimport styles from '../../styles/index.module.css';\n\nconst Balance = ({ balance, income, expenses }) => {\n  return (\n    <section className={styles.balance}>\n      <span className={styles.span}>&#x2191;{income}$</span>\n      <span className={styles.span}>&#x2193;{expenses}$</span>\n      <span className={styles.span}>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  balance: T.number.isRequired,\n  income: T.number.isRequired,\n  expenses: T.number.isRequired,\n};\nexport default Balance;\n","/* eslint-disable */\nimport React from 'react';\nimport T from 'prop-types';\nimport styles from '../../styles/index.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  const renderTransactions = () => {\n    return transactions.map(transaction => {\n      const { id, date, type, amount } = transaction;\n      return (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}$</td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <table className={styles.history}>\n        <thead>\n          <tr>\n            <th className={styles.headline}>Transaction</th>\n            <th className={styles.headline}>Amount</th>\n            <th className={styles.headline}>Date</th>\n          </tr>\n        </thead>\n        <tbody>{renderTransactions()}</tbody>\n      </table>\n    </div>\n  );\n};\nTransactionHistory.propTypes = {\n  transactions: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      type: T.string.isRequired,\n      amount: T.number.isRequired,\n      date: T.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default TransactionHistory;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport T from 'prop-types';\nimport uuidv1 from 'uuid/v1';\nimport Swal from 'sweetalert2';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n  componentDidMount() {\n    try {\n      const transactions = localStorage.getItem('transactions');\n      const parsedTransactions = JSON.parse(transactions);\n      const { balance } = this.calculateFunds(parsedTransactions);\n      this.setState({\n        transactions: parsedTransactions,\n        balance,\n      });\n    } catch (error) {}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions } = this.state;\n    if (prevState.transactions.lengt !== transactions.length) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n  }\n\n  handleDeposit = amount => {\n    if (amount <= 0) {\n      Swal.fire('Введите сумму для проведения операции!');\n      return;\n    }\n    this.setState(({ transactions, balance }) => {\n      const newStateTransaction = {\n        id: uuidv1(),\n        type: 'deposit',\n        amount,\n        date: new Date().toLocaleString(),\n      };\n      return {\n        transactions: [...transactions, newStateTransaction],\n        balance: balance + amount,\n      };\n    });\n  };\n  handleWithdraw = amount => {\n    if (amount <= 0) {\n      Swal.fire('Введите сумму для проведения операции!');\n      return;\n    }\n    if (this.state.balance - amount < 0) {\n      Swal.fire('На счету недостаточно средств для проведения операции!');\n      return;\n    }\n    this.setState(({ transactions, balance }) => {\n      const newStateTransaction = {\n        id: uuidv1(),\n        type: 'withdrawal',\n        amount,\n        date: new Date().toLocaleString(),\n      };\n      return {\n        transactions: [...transactions, newStateTransaction],\n        balance: balance - amount,\n      };\n    });\n  };\n\n  totalTransfers() {\n    const { transactions } = this.state;\n    return transactions.reduce(\n      (acc, transaction) => {\n        return {\n          ...acc,\n          [transaction.type]: acc[transaction.type] + transaction.amount,\n        };\n      },\n      {\n        deposit: 0,\n        withdrawal: 0,\n      },\n    );\n  }\n\n  render() {\n    const { transactions, balance } = this.state;\n    const { deposit, withdrawal } = this.totalTransfers();\n    return (\n      <div className=\"dashboard\">\n        <Controls\n          onDeposit={this.handleDeposit}\n          onWithdraw={this.handleWithdraw}\n        />\n        <Balance\n          balance={balance}\n          income={Number(deposit)}\n          expenses={Number(withdrawal)}\n        />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport Dashboard from './Dashboard/Dashboard';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Dashboard />\r\n  </div>\r\n);\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}