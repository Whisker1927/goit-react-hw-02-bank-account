{"version":3,"sources":["styles/index.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","state","amount","handleInputChange","e","setState","target","value","handleFormInput","preventDefault","handleDepositButton","props","onDeposit","Number","handleWithdrawButton","onWithdraw","this","className","styles","section","onSubmit","type","name","input","onChange","button","onClick","Component","Balance","balance","transactions","map","transaction","span","TransactionHistory","history","headline","id","date","key","Dashboard","handleDeposit","Swal","fire","newStateTransaction","uuidv1","Date","toLocaleString","handleWithdraw","totalTransfers","reduce","acc","deposit","withdrawal","localStorage","getItem","parsedTransactions","JSON","parse","calculateFunds","error","prevProps","prevState","lengt","length","setItem","stringify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3213b457.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__3BhaY\",\"input\":\"styles_input__2Kive\",\"section\":\"styles_section__3HaWR\",\"balance\":\"styles_balance__17dQB\",\"history\":\"styles_history__3qeO5\",\"span\":\"styles_span__clfy0\",\"headline\":\"styles_headline__19mW8\"};","/* eslint-disable */\nimport React, { Component } from 'react';\nimport T from 'prop-types';\nimport styles from '../../styles/index.module.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onDeposit: T.func.isRequired,\n    onWithdraw: T.func.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      amount: e.target.value,\n    });\n  };\n\n  handleFormInput = e => {\n    e.preventDefault();\n  };\n\n  handleDepositButton = () => {\n    this.props.onDeposit(Number(this.state.amount));\n    this.setState({ amount: '' });\n  };\n\n  handleWithdrawButton = () => {\n    this.props.onWithdraw(Number(this.state.amount));\n    this.setState({ amount: '' });\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={styles.section}>\n        <form onSubmit={this.handleFormInput}>\n          <input\n            type=\"number\"\n            name=\"amount\"\n            className={styles.input}\n            value={amount}\n            onChange={this.handleInputChange}\n          ></input>\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={this.handleDepositButton}\n          >\n            Deposit\n          </button>\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={this.handleWithdrawButton}\n          >\n            Withdraw\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n","/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport T from 'prop-types';\nimport styles from '../../styles/index.module.css';\n\nconst Balance = ({ balance, transactions }) => {\n  const renderAmount = () => {\n    return transactions.map(transaction => {\n      const { type, amount } = transaction;\n      return type === 'Deposit' ? (\n        <>\n          <span className={styles.span}>&#x2191;{amount}$</span>\n        </>\n      ) : (\n        <>\n          <span className={styles.span}>&#x2193;{amount}$</span>\n        </>\n      );\n    });\n  };\n  return (\n    <section className={styles.balance}>\n      <>{renderAmount()}</>\n      <span className={styles.span}>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  balance: T.number.isRequired,\n  transactions: T.arrayOf(\n    T.shape({\n      id: T.string,\n      type: T.string,\n      amount: T.number.isRequired,\n      date: T.string,\n    }),\n  ),\n};\nexport default Balance;\n","/* eslint-disable */\nimport React from 'react';\nimport T from 'prop-types';\nimport styles from '../../styles/index.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  const renderTransactions = () => {\n    return transactions.map(transaction => {\n      const { id, date, type, amount } = transaction;\n      return (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}$</td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <table className={styles.history}>\n        <thead>\n          <tr>\n            <th className={styles.headline}>Transaction</th>\n            <th className={styles.headline}>Amount</th>\n            <th className={styles.headline}>Date</th>\n          </tr>\n        </thead>\n        <tbody>{renderTransactions()}</tbody>\n      </table>\n    </div>\n  );\n};\nTransactionHistory.propTypes = {\n  transactions: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      type: T.string.isRequired,\n      amount: T.number.isRequired,\n      date: T.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default TransactionHistory;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport T from 'prop-types';\nimport uuidv1 from 'uuid/v1';\nimport Swal from 'sweetalert2';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n  componentDidMount() {\n    try {\n      const transactions = localStorage.getItem('transactions');\n      const parsedTransactions = JSON.parse(transactions);\n      const { balance } = this.calculateFunds(parsedTransactions);\n      this.setState({\n        transactions: parsedTransactions,\n        balance,\n      });\n    } catch (error) {}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions } = this.state;\n    if (prevState.transactions.lengt !== transactions.length) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n  }\n\n  handleDeposit = amount => {\n    if (amount <= 0) {\n      Swal.fire('Введите сумму для проведения операции!');\n      return;\n    }\n    this.setState(({ transactions, balance }) => {\n      const newStateTransaction = {\n        id: uuidv1(),\n        type: 'Deposit',\n        amount,\n        date: new Date().toLocaleString(),\n      };\n      return {\n        transactions: [...transactions, newStateTransaction],\n        balance: balance + amount,\n      };\n    });\n  };\n  handleWithdraw = amount => {\n    if (amount <= 0) {\n      Swal.fire('Введите сумму для проведения операции!');\n      return;\n    }\n    if (this.state.balance - amount < 0) {\n      Swal.fire('На счету недостаточно средств для проведения операции!');\n      return;\n    }\n    this.setState(({ transactions, balance }) => {\n      const newStateTransaction = {\n        id: uuidv1(),\n        type: 'Withdrawal',\n        amount,\n        date: new Date().toLocaleString(),\n      };\n      return {\n        transactions: [...transactions, newStateTransaction],\n        balance: balance - amount,\n      };\n    });\n  };\n  totalTransfers = transactions => {\n    return transactions.reduce(\n      (acc, transaction) => {\n        return {\n          ...acc,\n          [transaction.type]: [transaction.type] + transaction.amount,\n        };\n      },\n      {\n        deposit: 0,\n        withdrawal: 0,\n      },\n    );\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    return (\n      <div className=\"dashboard\">\n        <Controls\n          onDeposit={this.handleDeposit}\n          onWithdraw={this.handleWithdraw}\n        />\n        <Balance balance={balance} transactions={transactions} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport Dashboard from './Dashboard/Dashboard';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Dashboard />\r\n  </div>\r\n);\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}